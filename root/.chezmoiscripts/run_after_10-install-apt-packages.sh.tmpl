#!/usr/bin/env bash

# {{ template "scripts-library" }}

# The following line is for ShellCheck to correctly identify the above included library
true || source ../.chezmoitemplates/scripts-library

readonly wanted_packages=(
  apt-transport-https
  autojump
  bat
  btop
  build-essential
  ca-certificates
  containerd.io
  curl
  dialog
  direnv
  dnsutils
  docker-buildx-plugin
  docker-ce
  docker-ce-cli
  docker-compose-plugin
  file
  git
  gnupg
  jq
  lsb-release
  net-tools
  neovim
  npm
  parallel
  pass
  procps
  python3
  python3-venv
  python3-pygments
  ripgrep
  ssh-askpass
  socat
  time
  tree
  wget
  wl-clipboard
  zip
  zsh
  # {{ if .is_gnome }}
  code
  gnome-menus
  gnome-tweaks
  google-chrome-stable
  python3-nautilus
  yaru-theme-gtk
  yaru-theme-icon
  yaru-theme-sound
  # {{ if not .is_wsl }}
  yaru-theme-gnome-shell
  libsecret-1-0
  gnome-menus
  # {{ end }}
  # {{ end }}
  # {{ if .is_wsl }}
  wslu
  # {{ else }}
  # {{ if eq .chezmoi.osRelease.versionCodename "jammy" }}
  linux-generic-hwe-22.04
  # {{ else if eq .chezmoi.osRelease.versionCodename "focal" }}
  linux-generic-hwe-20.04
  # {{ end }}
  # {{ end }}
)
missing_packages=()

for package in "${wanted_packages[@]}"; do
  # shellcheck disable=SC2310
  if ! is_apt_package_installed "${package}"; then
    missing_packages+=("${package}")
  fi
done

if [[ ${#missing_packages[@]} -gt 0 ]]; then
  log_task "Installing missing packages with APT: ${missing_packages[*]}"

  c apt-get update

  extra_args=()
  if [[ "${DOTFILES_TEST:-}" == true ]]; then
    log_manual_action "Not installing recommended packages to speed up test mode"
    extra_args+=("--no-install-recommends")
  else
    extra_args+=("--install-recommends")
  fi

  c env DEBIAN_FRONTEND=noninteractive apt-get install --yes "${extra_args[@]}" "${missing_packages[@]}"
fi
